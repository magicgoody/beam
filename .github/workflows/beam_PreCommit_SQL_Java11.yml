# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: beam_PreCommit_SQL_Java11

on:
  push:
    tags: ['v*']
    branches: ['master', 'release-*']
    paths: [sdks/java/extensions/sql/**]
  pull_request:
    # branches: ['master', 'release-*']
    paths: [sdks/java/extensions/sql/**]
  issue_comment:
    types: [created]
  schedule:
    - cron: '* */6 * * *'
#Setting explicit permissions for the action to avoid the default permissions which are `write-all` in case of pull_request_target event
permissions:
    actions: write
    pull-requests: read
    checks: read
    contents: read
    deployments: read
    id-token: none
    issues: read
    discussions: read
    packages: read
    pages: read
    repository-projects: read
    security-events: read
    statuses: read

jobs:
  beam_PreCommit_SQL_Java11:
    if: github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'schedule' || github.event.comment.body == 'Run SQL_Java11 PreCommit'
    #runs-on: [ubuntu-local]
    runs-on: [self-hosted, ubuntu-20.04, main]
    name: "beam_PreCommit_SQL_Java11"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Rerun on comment
        if: github.event.comment.body == 'Run SQL_Java11 PreCommit'
        uses: ./.github/actions/rerun-job-action
        with:
          pull_request_url: ${{ github.event.issue.pull_request.url }}
          github_repository: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_job: ${{ github.job }}
          github_current_run_id: ${{ github.run_id }}
      - name: Set up Java 11
        uses: actions/setup-java@v3.8.0
        with:
          distribution: 'temurin'
          java-version: '11' 
      - name: Remove default github maven configuration
        run: rm ~/.m2/settings.xml
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.4'
          channel: 'stable'
      - name: java test
        run: echo $JAVA_HOME_11_X64
      # - name: Authenticate on GCP
      #   uses: google-github-actions/setup-gcloud@v0
      #   with:
      #     service_account_email: ${{ secrets.GCP_SA_EMAIL }}
      #     service_account_key: ${{ secrets.GCP_SA_KEY }}
      #     project_id: ${{ secrets.GCP_PROJECT_ID }}
      #     export_default_credentials: true
      - name: Build and Test
        run: ./gradlew :sqlPreCommit 
          -PdisableSpotlessCheck=true 
          -PdisableCheckStyle=true 
          -PskipCheckerFramework 
          -Pdocker-pull-licenses
          -PcompileAndRunTestsWithJava11 
          -Pjava11Home=$JAVA_HOME_11_X64
      - name: Archive JUnit Test Results
        uses: actions/upload-artifact@v3
        with:
          name: JUnit Test Results
          path: '**/build/test-results/**/*.xml'
      - name: Archive SpotBugs Results
        uses: actions/upload-artifact@v2
        with:
          name: SpotBugs Results
          path: '**/build/reports/spotbugs/*.html'