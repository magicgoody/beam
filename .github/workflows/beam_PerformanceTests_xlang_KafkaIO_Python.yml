# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: PerformanceTests xlang KafkaIO Python

on:
  issue_comment:
    types: [created]
  schedule:
    - cron: '30 8,20 * * *'
  workflow_dispatch:

#Setting explicit permissions for the action to avoid the default permissions which are `write-all` in case of pull_request_target event
permissions:
  actions: write
  pull-requests: write
  checks: write
  contents: read
  deployments: read
  id-token: none
  issues: write
  discussions: read
  packages: read
  pages: read
  repository-projects: read
  security-events: read
  statuses: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.issue.number || github.sha || github.head_ref || github.ref }}-${{ github.event.schedule || github.event.comment.body || github.event.sender.login }}'
  cancel-in-progress: true

# env:
#   GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
#   GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GE_CACHE_USERNAME }}
#   GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GE_CACHE_PASSWORD }}

jobs:
  beam_PerformanceTests_xlang_KafkaIO_Python:
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'schedule' ||
      github.event.comment.body == 'Run Java CompressedTextIO Performance Test'
    runs-on: [self-hosted, ubuntu-20.04, main]
    timeout-minutes: 100
    name: ${{ matrix.job_name }} (${{ matrix.job_phrase }})
    strategy:
      matrix:
        job_name: ["beam_PerformanceTests_xlang_KafkaIO_Python"]
        job_phrase: ["Run Java CompressedTextIO Performance Test"]
    steps:
      - uses: actions/checkout@v3
      - name: Setup repository
        uses: ./.github/actions/setup-action
        with:
          comment_phrase: ${{ matrix.job_phrase }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_job: ${{ matrix.job_name }} (${{ matrix.job_phrase }})
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Set k8s access
        uses: ./.github/actions/setup-k8s-access
        with:
          cluster_name: io-datastores-for-tests
          k8s_namespace: ${{ matrix.job_name }}-${{ github.run_id }}
      - name: Install Kafka
        id: install_kafka
        run: |
          cd ${{ github.workspace }}/.test-infra/kubernetes/kafka-cluster/
          sh setup-cluster.sh
      - name: Prepare config
        id: set_config
        shell: bash
        run: |
          CURCONFIG=$(grep -v "^#.*" ./.github/workflows/performance-tests-job-configs/config_PerformanceTests_xlang_KafkaIO_Python.txt | tr '\n' ' ')
          echo "prepared_config=$CURCONFIG" >> $GITHUB_OUTPUT
      - name: run PerformanceTests xlang KafkaIO Python Test
        uses: ./.github/actions/gradle-command-self-hosted-action
        with:
          gradle-command: :sdks:python:apache_beam:testing:load_tests:run
          arguments: |
            -PloadTest.mainClass=apache_beam.io.external.xlang_kafkaio_perf_test \
            -Prunner=DataflowRunner \
            -PpythonVersion=3.8 \
            '${{ steps.set_config.outputs.prepared_config }}--filename_prefix=gs://temp-storage-for-perf-tests/beam_PerformanceTests_xlang_KafkaIO_Python/${{github.run_id}}/ --bootstrap_servers=34.121.190.237:32404,34.27.64.50:32405,34.31.44.134:32406' \